{%- assign headerSnippetPath = 'header-index' -%}
{%- assign wfPage = '687e7b1fe546230171c3f7a6' -%}
{%- assign bodyClasses = '' -%}
<div class="page-wrapper home">
	{%- render 'global-styles' -%}
	{%- render 'navbar' -%}
	<main class="main-wrapper">
		<section class="section_layout195">
			<div class="padding-global">
				<div class="container-large">
					<div class="padding-section-large">
						<div class="layout195_component">
							{% for product in collections.all.products %}
								<div class="w-layout-grid layout195_content">
									<div
										data-delay="4000"
										data-animation="slide"
										class="gallery15_slider w-slider"
										data-autoplay="false"
										data-easing="ease"
										data-hide-arrows="false"
										data-disable-swipe="false"
										data-autoplay-limit="0"
										data-nav-spacing="3"
										data-duration="500"
										data-infinite="false"
										id="w-node-f7ea5feb-541b-92a4-52df-4d6bb7c14729-50830d4d">
										<div class="gallery15_mask w-slider-mask">
											{% for image in product.images %}
												<div class="gallery15_slide w-slide">
													<div class="gallery15_image-wrapper">
														<img
															sizes="(max-width: 647px) 100vw, 647px"
															srcset="{{ image | img_url: '500x' }} 500w, {{ image | img_url: '647x' }} 647w"
															alt="{{ image.alt | escape }}"
															src="{{ image | img_url: '647x' }}"
															loading="lazy"
															class="gallery15_image">
													</div>
												</div>
											{% endfor %}
										</div>
										<div class="slider-arrow is-centre-previous hide-mobile-landscape w-slider-arrow-left">
											<div class="slider-arrow-icon_default w-embed">
												<svg
													width="100%"
													height="100%"
													viewBox="0 0 16 16"
													fill="none"
													xmlns="http://www.w3.org/2000/svg">
													<path d="M3.31066 8.75001L9.03033 14.4697L7.96967 15.5303L0.439339 8.00001L7.96967 0.469676L9.03033 1.53034L3.31066 7.25001L15.5 7.25L15.5 8.75L3.31066 8.75001Z" fill="currentColor"></path>
												</svg>
											</div>
										</div>
										<div class="slider-arrow is-centre-next hide-mobile-landscape w-slider-arrow-right">
											<div class="slider-arrow-icon_default w-embed">
												<svg
													width="100%"
													height="100%"
													viewBox="0 0 16 16"
													fill="none"
													xmlns="http://www.w3.org/2000/svg">
													<path d="M12.6893 7.25L6.96967 1.53033L8.03033 0.469666L15.5607 8L8.03033 15.5303L6.96967 14.4697L12.6893 8.75H0.5V7.25H12.6893Z" fill="currentColor"></path>
												</svg>
											</div>
										</div>
										<div class="gallery15_slide-nav w-slider-nav w-slider-nav-invert w-round"></div>
									</div>
									<div
										id="w-node-_63fcb8b2-9f27-5267-6eca-2dce5be28476-50830d4d"
										class="layout195_content-right">
										<h2 class="heading-shop">{{ product.title }}</h2>
										<div class="spacer-small"></div>
										<div class="text-rich-text-shop w-richtext">
											{% if product.description != blank %}
												{{ product.description }}
											{% else %}
												<p>{{ product.title }} - Produto dispon√≠vel em nossa loja.</p>
											{% endif %}
											{% if product.metafields.custom.features %}
												<ul
													role="list"
													class="list">
													{% assign features = product.metafields.custom.features | split: ',' %}
													{% for feature in features %}
														<li>{{ feature | strip }}</li>
													{% endfor %}
												</ul>
											{% endif %}
										</div>
										<div class="spacer-medium"></div>
										{% if product.metafields.custom.quantity %}
											<p class="text-size-small">{{ product.metafields.custom.quantity }}</p>
										{% endif %}
										<div class="spacer-small"></div>
										<div class="price-wrapper">
											<div class="text-price-shop">
												{% if product.compare_at_price > product.price %}
													<span class="compare-price">{{ product.compare_at_price | money }}</span>
												{% endif %}
												{{ product.price | money }}
											</div>
											<div class="button-group">
												{%- if product.available -%}
													<button
														type="button"
														class="button"
														onclick="addToCartAndOpenSidebar('{{ product.selected_or_first_available_variant.id }}', 1)">
														SHOP
													</button>
												{%- else -%}
													<button
														type="button"
														class="button"
														disabled>
														Sold out
													</button>
												{%- endif -%}
											</div>
										</div>
									</div>
								</div>
							{% endfor %}
						</div>
					</div>
				</div>
			</div>
		</section>
	</main>
	{%- render 'footer' -%}
</div>
<script
	src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=687b9decde4053855982b5b1"
	type="text/javascript"
	integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
	crossorigin="anonymous"
	defer></script>
<script
	src="{{ 'webflow.js' | asset_url }}"
	type="text/javascript"
	defer></script>

{{ 'udesly-shopify.min.js' | asset_url | script_tag }}

<style>
	.button-group {
		display: flex;
		gap: 10px;
		flex-wrap: wrap;
	}

	.sidebar-cart-trigger {
		background-color: #333 !important;
		color: #fff !important;
	}

	.sidebar-cart-trigger:hover {
		background-color: #555 !important;
	}
</style>

<script>
	// Function to add product to cart and open sidebar
	function addToCartAndOpenSidebar(productId, quantity = 1) {
		// Show loading state
		const button = event.target;
		const originalText = button.textContent;
		button.textContent = 'Adicionando...';
		button.disabled = true;

		const formData = new FormData();
		formData.append('id', productId);
		formData.append('quantity', quantity);

		fetch('/cart/add.js', {
			method: 'POST',
			body: formData,
		})
			.then(response => response.json())
			.then(data => {
				if (data.status) {
					// Error occurred
					alert('Error adding product to cart: ' + data.description);
				} else {
					// Success - update cart count and open sidebar
					updateCartCount();
					if (typeof window.openSidebarCart === 'function') {
						window.openSidebarCart();
					}
				}
			})
			.catch(error => {
				console.error('Error:', error);
				alert('Error adding product to cart');
			})
			.finally(() => {
				// Reset button state
				button.textContent = originalText;
				button.disabled = false;
			});
	}

	// Function to update cart count and sidebar
	function updateCartCount() {
		fetch('/cart.js')
			.then(response => response.json())
			.then(cart => {
				const cartCountElements = document.querySelectorAll('.cart-quantity-text');
				cartCountElements.forEach(element => {
					element.textContent = cart.item_count;
				});

				// Update sidebar cart if it exists
				if (typeof window.updateCartDisplay === 'function') {
					window.updateCartDisplay(cart);
				}
			})
			.catch(error => {
				console.error('Error updating cart count:', error);
			});
	}
</script>
